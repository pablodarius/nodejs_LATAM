{"version":3,"file":"mock-xmlhttprequest.common.js","sources":["../src/Event.js","../src/EventTarget.js","../src/HeadersContainer.js","../src/Utils.js","../src/MockXhr.js","../src/MockXhrServer.js","../src/Factories.js"],"sourcesContent":["/**\n * XMLHttpRequest events\n */\nexport default class Event {\n  /**\n   * @param {string} type event type\n   * @param {number} loaded loaded bytes\n   * @param {number} total total bytes\n   */\n  constructor(type, loaded, total) {\n    this.type = type;\n    this.loaded = loaded !== undefined ? loaded : 0;\n    if (total > 0) {\n      this.total = total;\n      this.lengthComputable = true;\n    } else {\n      this.total = 0;\n      this.lengthComputable = false;\n    }\n  }\n}\n","function flattenUseCaptureFlag(options) {\n  if (typeof options === 'boolean') {\n    return options;\n  }\n  return !!options.capture;\n}\n\n/**\n * An EventTarget object represents a target to which an event can be dispatched when something has\n * occurred.\n *\n * Based on https://dom.spec.whatwg.org/#interface-eventtarget\n */\nexport default class EventTarget {\n  /**\n   * Contructor\n   *\n   * @param {?object} eventContext optional \"this\" for event handlers\n   */\n  constructor(eventContext = this) {\n    this._eventContext = eventContext;\n    this._eventListeners = {};\n  }\n\n  /**\n   * @returns {boolean} whether any event listener is registered\n   */\n  hasListeners() {\n    return EventTarget.events.some((event) => {\n      return this._eventListeners[event] || this[`on${event}`];\n    });\n  }\n\n  /**\n   * Add an event listener.\n   * See https://dom.spec.whatwg.org/#dom-eventtarget-addeventlistener\n   *\n   * @param {string} type event type ('load', 'abort', etc)\n   * @param {EventListener|Function} callback listener callback\n   * @param {boolean|object} options options object or the useCapture flag\n   */\n  addEventListener(type, callback, options = false) {\n    if (callback) {\n      const useCapture = flattenUseCaptureFlag(options);\n      const listener = {\n        callback,\n        useCapture,\n        once: !!options.once,\n      };\n\n      this._eventListeners[type] = this._eventListeners[type] || [];\n\n      // If eventTarget’s event listener list does not contain an event listener whose type is\n      // listener’s type, callback is listener’s callback, and capture is listener’s capture, then\n      // append listener to eventTarget’s event listener list.\n      // See https://dom.spec.whatwg.org/#add-an-event-listener\n      if (!this._eventListeners[type].some((other) => {\n        return other.callback === listener.callback && other.useCapture === listener.useCapture;\n      })) {\n        this._eventListeners[type].push(listener);\n      }\n    }\n  }\n\n  /**\n   * Remove an event listener.\n   * See https://dom.spec.whatwg.org/#dom-eventtarget-removeeventlistener\n   *\n   * @param {string} type event type ('load', 'abort', etc)\n   * @param {EventListener|Function} callback listener callback\n   * @param {boolean|object} options options object or the useCapture flag\n   */\n  removeEventListener(type, callback, options = false) {\n    if (this._eventListeners[type]) {\n      const useCapture = flattenUseCaptureFlag(options);\n      const index = this._eventListeners[type].findIndex((listener) => {\n        return callback === listener.callback && useCapture === listener.useCapture;\n      });\n      if (index >= 0) {\n        this._eventListeners[type].splice(index, 1);\n      }\n    }\n  }\n\n  /**\n   * Calls all the listeners for the event.\n   *\n   * @param {object} event event\n   * @returns {boolean} always true since none of the xhr event are cancelable\n   */\n  dispatchEvent(event) {\n    // Only the event listeners registered at this point should be called. Storing them here avoids\n    // problems with callbacks that add or remove listeners.\n    const listeners = [];\n    if (this._eventListeners[event.type]) {\n      listeners.push(...this._eventListeners[event.type].map(listener => listener.callback));\n\n      // Remove 'once' listeners\n      this._eventListeners[event.type] = this._eventListeners[event.type]\n        .filter(listener => !listener.once);\n    }\n\n    // Handle event listeners added as object properties (e.g. obj.onload = ...)\n    if (EventTarget.events.includes(event.type)) {\n      const listener = this[`on${event.type}`];\n      if (listener) {\n        listeners.push(listener);\n      }\n    }\n\n    // Call the listeners\n    listeners.forEach((listener) => {\n      if (typeof listener === 'function') {\n        listener.call(this._eventContext, event);\n      } else {\n        listener.handleEvent();\n      }\n    });\n    return true;\n  }\n}\n\n/**\n * XMLHttpRequest events\n */\nEventTarget.events = [\n  'loadstart',\n  'progress',\n  'abort',\n  'error',\n  'load',\n  'timeout',\n  'loadend',\n];\n","/**\n * HTTP header container\n */\nexport default class HeadersContainer {\n  /**\n   * @param {object} headers initial headers\n   */\n  constructor(headers) {\n    this._headers = new Map();\n    if (headers && headers instanceof Object) {\n      Object.keys(headers).forEach((key) => {\n        this.addHeader(key, headers[key]);\n      });\n    }\n  }\n\n  /**\n   * Reset the container to its empty state.\n   */\n  reset() {\n    this._headers.clear();\n  }\n\n  /**\n   * Get header value. Header names are case-insensitive.\n   *\n   * @param  {string} name header name\n   * @returns {string|null} header value or null\n   */\n  getHeader(name) {\n    const value = this._headers.get(name.toLowerCase());\n    return value !== undefined ? value : null;\n  }\n\n  /**\n   * Get all headers as a string. Each header is on its own line.\n   *\n   * @returns {string} concatenated headers\n   */\n  getAll() {\n    // Sort the header names. It's not mandated by RFC 7230 but it makes assertion testing easier\n    // and, most importantly, it is required by getAllResponseHeaders() of XMLHttpRequest.\n    // See https://xhr.spec.whatwg.org/#the-getallresponseheaders()-method\n    const headerNames = [...this._headers.keys()].sort();\n\n    // Combine the header values\n    const headers = headerNames.reduce((result, name) => {\n      const headerValue = this._headers.get(name);\n      return `${result}${name}: ${headerValue}\\r\\n`;\n    }, '');\n    return headers;\n  }\n\n  /**\n   * Get all headers as an object.\n   *\n   * @returns {object} headers\n   */\n  getHash() {\n    const headers = {};\n    this._headers.forEach((value, name) => {\n      headers[name] = value;\n    });\n    return headers;\n  }\n\n  /**\n   * Add a header value, combining it with any previous value for the same header name.\n   *\n   * @param {string} name header name\n   * @param {string} value header value\n   */\n  addHeader(name, value) {\n    name = name.toLowerCase();\n    const currentValue = this._headers.get(name);\n    if (currentValue) {\n      value = `${currentValue}, ${value}`;\n    }\n    this._headers.set(name, value);\n  }\n}\n","// Disallowed request headers for setRequestHeader()\nconst forbiddenHeaders = [\n  'Accept-Charset',\n  'Accept-Encoding',\n  'Access-Control-Request-Headers',\n  'Access-Control-Request-Method',\n  'Connection',\n  'Content-Length',\n  'Cookie',\n  'Cookie2',\n  'Date',\n  'DNT',\n  'Expect',\n  'Host',\n  'Keep-Alive',\n  'Origin',\n  'Referer',\n  'TE',\n  'Trailer',\n  'Transfer-Encoding',\n  'Upgrade',\n  'Via',\n];\nconst forbiddenHeaderRegEx = new RegExp(`^(${forbiddenHeaders.join('|')}|Proxy-.*|Sec-.*)$`, 'i');\n\n/**\n * See https://fetch.spec.whatwg.org/#forbidden-header-name\n *\n * @param {string} name header name\n * @returns {boolean} whether the request header name is forbidden for XMLHttpRequest\n */\nexport function isRequestHeaderForbidden(name) {\n  return forbiddenHeaderRegEx.test(name);\n}\n\n/**\n * See https://fetch.spec.whatwg.org/#forbidden-method\n *\n * @param {string} name method name\n * @returns {boolean} whether the request method is forbidden for XMLHttpRequest\n */\nexport function isRequestMethodForbidden(method) {\n  return /^(CONNECT|TRACE|TRACK)$/i.test(method);\n}\n\n// Normalize method names as described in open()\n// https://xhr.spec.whatwg.org/#the-open()-method\nconst upperCaseMethods = [\n  'DELETE',\n  'GET',\n  'HEAD',\n  'OPTIONS',\n  'POST',\n  'PUT',\n];\nconst upperCaseMethodsRegEx = new RegExp(`^(${upperCaseMethods.join('|')})$`, 'i');\n\n/**\n * See https://fetch.spec.whatwg.org/#concept-method-normalize\n *\n * @param {string} method HTTP method name\n * @returns {string} normalized method name\n */\nexport function normalizeHTTPMethodName(method) {\n  if (upperCaseMethodsRegEx.test(method)) {\n    method = method.toUpperCase();\n  }\n  return method;\n}\n\n// Status code reason phrases from RFC 7231 §6.1, RFC 4918, RFC 5842, RFC 6585 and RFC 7538\nconst statusTexts = {\n  100: 'Continue',\n  101: 'Switching Protocols',\n  200: 'OK',\n  201: 'Created',\n  202: 'Accepted',\n  203: 'Non-Authoritative Information',\n  204: 'No Content',\n  205: 'Reset Content',\n  206: 'Partial Content', // RFC 7233\n  207: 'Multi-Status', // RFC 4918\n  208: 'Already Reported', // RFC 5842\n  300: 'Multiple Choices',\n  301: 'Moved Permanently',\n  302: 'Found',\n  303: 'See Other',\n  304: 'Not Modified', // RFC 7232\n  305: 'Use Proxy',\n  307: 'Temporary Redirect',\n  308: 'Permanent Redirect', // RFC 7538\n  400: 'Bad Request',\n  401: 'Unauthorized', // RFC 7235\n  402: 'Payment Required',\n  403: 'Forbidden',\n  404: 'Not Found',\n  405: 'Method Not Allowed',\n  406: 'Not Acceptable',\n  407: 'Proxy Authentication Required', // RFC 7235\n  408: 'Request Timeout',\n  409: 'Conflict',\n  410: 'Gone',\n  411: 'Length Required',\n  412: 'Precondition Failed', // RFC 7232\n  413: 'Payload Too Large',\n  414: 'URI Too Long',\n  415: 'Unsupported Media Type',\n  416: 'Range Not Satisfiable', // RFC 7233\n  417: 'Expectation Failed',\n  422: 'Unprocessable Entity', // RFC 4918\n  423: 'Locked', // RFC 4918\n  424: 'Failed Dependency', // RFC 4918\n  426: 'Upgrade Required',\n  428: 'Precondition Required', // RFC 6585\n  429: 'Too Many Requests', // RFC 6585\n  431: 'Request Header Fields Too Large', // RFC 6585\n  500: 'Internal Server Error',\n  501: 'Not Implemented',\n  502: 'Bad Gateway',\n  503: 'Service Unavailable',\n  504: 'Gateway Timeout',\n  505: 'HTTP Version Not Supported',\n  507: 'Insufficient Storage', // RFC 4918\n  511: 'Network Authentication Required', // RFC 6585\n};\n\n/**\n * @param {number} status HTTP status code\n * @returns {string} status text\n */\nexport function getStatusText(status) {\n  return statusTexts[status] || 'Unknown Status';\n}\n","import Event from './Event';\nimport EventTarget from './EventTarget';\nimport HeadersContainer from './HeadersContainer';\nimport {\n  getStatusText,\n  isRequestHeaderForbidden,\n  isRequestMethodForbidden,\n  normalizeHTTPMethodName,\n} from './Utils';\n\nfunction throwError(type, text = '') {\n  const exception = new Error(text);\n  exception.name = type;\n  throw exception;\n}\n\n/**\n * XMLHttpRequest mock for testing.\n * Based on https://xhr.spec.whatwg.org version '28 November 2018'.\n *\n * Supports:\n *  - events and states\n *  - open(), setRequestHeader(), send() and abort()\n *  - upload and download progress events\n *  - response status, statusText, headers and body\n *  - the timeout attribute (can be disabled) (since v4.0.0)\n *  - simulating a network error\n *  - simulating a request timeout (see MockXhr.setRequestTimeout())\n *\n * Partial support:\n *  - overrideMimeType(): throws when required, but has no other effect.\n *  - responseType: '', 'text' and 'json' are fully supported. Other responseType values can also be\n *    used, but they will return the response body given to setResponseBody() as-is in xhr.response.\n *  - responseXml: the response body is not converted to a document response. To get a document\n *    response, use it directly as the response body in setResponseBody().\n *\n * Not supported:\n * - synchronous requests (i.e. async == false)\n * - parsing the url and setting the username and password since there are no actual HTTP requests\n * - responseUrl (i.e. the final request url with redirects) is not automatically set. This can be\n *   emulated in a request handler.\n */\nexport default class MockXhr extends EventTarget {\n  /**\n   * Constructor\n   */\n  constructor() {\n    super();\n    this._readyState = MockXhr.UNSENT;\n    this.requestHeaders = new HeadersContainer();\n    this._withCredentials = false;\n    this._timeout = 0;\n    this._upload = new EventTarget(this);\n    this._response = this._networkErrorResponse();\n\n    // Per-instance flag to enable the effects of the timeout attribute\n    this.timeoutEnabled = true;\n\n    // Hook for XMLHttpRequest creation\n    if (typeof MockXhr.onCreate === 'function') {\n      MockXhr.onCreate(this);\n    }\n  }\n\n  ////////////\n  // States //\n  ////////////\n\n  /**\n   * https://xhr.spec.whatwg.org/#dom-xmlhttprequest-readystate\n   *\n   * @returns {number} readystate attribute\n   */\n  get readyState() {\n    return this._readyState;\n  }\n\n  /**\n   * noop setter\n   *\n   * @param {*} value ignored value\n   * @returns {*} value\n   */\n  set readyState(value) { return value; }\n\n  /////////////\n  // Request //\n  /////////////\n\n  /**\n   * Set the request method and url.\n   * https://xhr.spec.whatwg.org/#the-open()-method\n   *\n   * @param {string} method request HTTP method (GET, POST, etc.)\n   * @param {string} url request url\n   * @param {boolean} async async request flag (only true is supported)\n   */\n  open(method, url, async = true) {\n    if (!async) {\n      throw new Error('async = false is not supported.');\n    }\n    if (isRequestMethodForbidden(method)) {\n      throwError('SecurityError', `Method \"${method}\" forbidden.`);\n    }\n    method = normalizeHTTPMethodName(method);\n    // Skip parsing the url and setting the username and password\n\n    this._terminateRequest();\n\n    // Set variables\n    this._sendFlag = false;\n    this._uploadListenerFlag = false;\n    this.method = method;\n    this.url = url;\n    this.requestHeaders.reset();\n    this._response = this._networkErrorResponse();\n    if (this._readyState !== MockXhr.OPENED) {\n      this._readyState = MockXhr.OPENED;\n      this._fireReadyStateChange();\n    }\n  }\n\n  /**\n   * Add a request header value.\n   * https://xhr.spec.whatwg.org/#the-setrequestheader()-method\n   *\n   * @param {string} name header name\n   * @param {string} value header value\n   */\n  setRequestHeader(name, value) {\n    if (this._readyState !== MockXhr.OPENED || this._sendFlag) {\n      throwError('InvalidStateError');\n    }\n    if (typeof name !== 'string' || typeof value !== 'string') {\n      throw new SyntaxError();\n    }\n\n    if (!isRequestHeaderForbidden(name)) {\n      // Normalize value\n      value = value.trim();\n      this.requestHeaders.addHeader(name, value);\n    }\n  }\n\n  /**\n   * https://xhr.spec.whatwg.org/#dom-xmlhttprequest-timeout\n   *\n   * @returns {number} timeout attribute\n   */\n  get timeout() {\n    return this._timeout;\n  }\n\n  /**\n   * https://xhr.spec.whatwg.org/#dom-xmlhttprequest-timeout\n   *\n   * @param {number} value timeout value\n   */\n  set timeout(value) {\n    // Since this library is meant to run on node, skip the step involving the Window object.\n    this._timeout = value;\n    if (this._sendFlag && this.timeoutEnabled && this.constructor.timeoutEnabled) {\n      // A fetch is active so schedule a request timeout\n      this._scheduleRequestTimeout();\n    }\n  }\n\n  /**\n   * https://xhr.spec.whatwg.org/#dom-xmlhttprequest-withcredentials\n   *\n   * @returns {EventTarget} withCredentials attribute\n   */\n  get withCredentials() {\n    return this._withCredentials;\n  }\n\n  /**\n   * noop setter\n   *\n   * @param {boolean} value withCredentials value\n   */\n  set withCredentials(value) {\n    if ((this._readyState !== MockXhr.UNSENT && this._readyState !== MockXhr.OPENED)\n      || this._sendFlag) {\n      throwError('InvalidStateError');\n    }\n    this._withCredentials = !!value;\n  }\n\n  /**\n   * https://xhr.spec.whatwg.org/#the-upload-attribute\n   *\n   * @returns {EventTarget} upload attribute\n   */\n  get upload() {\n    return this._upload;\n  }\n\n  /**\n   * noop setter\n   *\n   * @param {*} value ignored value\n   * @returns {*} value\n   */\n  set upload(value) { return value; }\n\n  /**\n   * Initiate the request.\n   * https://xhr.spec.whatwg.org/#the-send()-method\n   *\n   * @param {*} body request body\n   */\n  send(body = null) {\n    if (this._readyState !== MockXhr.OPENED || this._sendFlag) {\n      throwError('InvalidStateError');\n    }\n    if (this.method === 'GET' || this.method === 'HEAD') {\n      body = null;\n    }\n\n    if (body !== null) {\n      let extractedContentType = null;\n\n      // Document body type not supported\n\n      // https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n      {\n        let contentType = null;\n        if (typeof body === 'string') {\n          contentType = 'text/plain;charset=UTF-8';\n        } else if (body.type) {\n          // As specified for Blob\n          contentType = body.type;\n        }\n\n        // BufferSource, FormData, etc. not handled specially\n        extractedContentType = contentType;\n      }\n\n      /*\n      * Skipping step \"4. If author request headers contains `Content-Type`, then:\"\n      * Parsing mime type strings and overriding the charset to UTF-8 seems like a lot of work\n      * for little gain. If I'm wrong, please open an issue or better yet a pull request.\n      */\n\n      if (this.requestHeaders.getHeader('Content-Type') === null && extractedContentType !== null) {\n        this.requestHeaders.addHeader('Content-Type', extractedContentType);\n      }\n    }\n\n    this._uploadListenerFlag = this._upload.hasListeners();\n    this.body = body;\n    this._uploadCompleteFlag = this.body === null;\n    this._timedOutFlag = false;\n    this._sendFlag = true;\n\n    this._fireEvent('loadstart', 0, 0);\n    if (!this._uploadCompleteFlag && this._uploadListenerFlag) {\n      this._fireUploadEvent('loadstart', 0, this._getRequestBodySize());\n    }\n\n    // Other interactions are done through the mock's response methods\n    if (this._readyState !== MockXhr.OPENED || !this._sendFlag) {\n      return;\n    }\n\n    this._timeoutReference = Date.now();\n    this._scheduleRequestTimeout();\n\n    // Hook for XMLHttpRequest.send(). Execute in an empty callstack\n    if (typeof this.onSend === 'function') {\n      // Save the callback in case it changes before it has a chance to run\n      const { onSend } = this;\n      setTimeout(() => onSend.call(this, this), 0);\n    }\n    if (typeof MockXhr.onSend === 'function') {\n      // Save the callback in case it changes before it has a chance to run\n      const { onSend } = MockXhr;\n      setTimeout(() => onSend.call(this, this), 0);\n    }\n  }\n\n  /**\n   * Abort the request.\n   * https://xhr.spec.whatwg.org/#the-abort()-method\n   */\n  abort() {\n    this._terminateRequest();\n\n    if ((this._readyState === MockXhr.OPENED && this._sendFlag)\n      || this._readyState === MockXhr.HEADERS_RECEIVED\n      || this._readyState === MockXhr.LOADING) {\n      this._requestErrorSteps('abort');\n    }\n\n    if (this._readyState === MockXhr.DONE) {\n      // No readystatechange event is dispatched.\n      this._readyState = MockXhr.UNSENT;\n      this._response = this._networkErrorResponse();\n    }\n  }\n\n  //////////////\n  // Response //\n  //////////////\n\n  /**\n   * https://xhr.spec.whatwg.org/#dom-xmlhttprequest-status\n   *\n   * @returns {number} status attribute\n   */\n  get status() {\n    return this._response.status;\n  }\n\n  /**\n   * noop setter\n   *\n   * @param {*} value ignored value\n   * @returns {*} value\n   */\n  set status(value) { return value; }\n\n  /**\n   * https://xhr.spec.whatwg.org/#the-statustext-attribute\n   *\n   * @returns {string} statusText attribute\n   */\n  get statusText() {\n    return this._response.statusMessage;\n  }\n\n  /**\n   * noop setter\n   *\n   * @param {*} value ignored value\n   * @returns {*} value\n   */\n  set statusText(value) { return value; }\n\n  /**\n   * Get a response header value.\n   * https://xhr.spec.whatwg.org/#dom-xmlhttprequest-getresponseheader\n   *\n   * @param {string} name header name\n   * @returns {string} header value\n   */\n  getResponseHeader(name) {\n    return this._response.headers.getHeader(name);\n  }\n\n  /**\n   * Get all response headers as a string.\n   * https://xhr.spec.whatwg.org/#dom-xmlhttprequest-getallresponseheaders\n   *\n   * @returns {string} concatenated headers\n   */\n  getAllResponseHeaders() {\n    return this._response.headers.getAll();\n  }\n\n  /**\n   * https://xhr.spec.whatwg.org/#dom-xmlhttprequest-overridemimetype\n   *\n   * @param {string} mime MIME type\n   */\n  overrideMimeType(/* mime */) {\n    if (this._readyState === MockXhr.LOADING || this._readyState === MockXhr.DONE) {\n      throwError('InvalidStateError');\n    }\n    // noop\n  }\n\n  /**\n   * https://xhr.spec.whatwg.org/#dom-xmlhttprequest-responsetype\n   *\n   * @returns {string} responseType attribute\n   */\n  get responseType() {\n    return this._responseType || '';\n  }\n\n  /**\n   * https://xhr.spec.whatwg.org/#dom-xmlhttprequest-responsetype\n   *\n   * @param {string} value responseType value\n   */\n  set responseType(value) {\n    // Since this library is meant to run on node, skip the steps involving the Window object.\n    if (this._readyState === MockXhr.LOADING || this._readyState === MockXhr.DONE) {\n      throwError('InvalidStateError');\n    }\n\n    // The spec doesn't mandate throwing anything on invalid values since values must be of type\n    // XMLHttpRequestResponseType. Observed browser behavior is to ignore invalid values.\n    const responseTypes = ['', 'arraybuffer', 'blob', 'document', 'json', 'text'];\n    if (responseTypes.includes(value)) {\n      this._responseType = value;\n    }\n  }\n\n  /**\n   * https://xhr.spec.whatwg.org/#the-response-attribute\n   *\n   * @returns {*} response\n   */\n  get response() {\n    if (this.responseType === '' || this.responseType === 'text') {\n      if (this._readyState !== MockXhr.LOADING && this._readyState !== MockXhr.DONE) {\n        return '';\n      }\n\n      // No support for charset decoding as outlined in https://xhr.spec.whatwg.org/#text-response\n      return this._response.body === null ? '' : this._response.body;\n    }\n\n    if (this._readyState !== MockXhr.DONE) {\n      return null;\n    }\n\n    if (this.responseType === 'json') {\n      if (this._response.body === null) {\n        return null;\n      }\n      try {\n        return JSON.parse(this._response.body);\n      } catch (e) {\n        return null;\n      }\n    }\n\n    // Other responseTypes are sent as-is. They can be given directly by setResponseBody() anyway.\n    return this._response.body;\n  }\n\n  /**\n   * noop setter\n   *\n   * @param {*} value ignored value\n   * @returns {*} value\n   */\n  set response(value) { return value; }\n\n  /**\n   * https://xhr.spec.whatwg.org/#the-responsetext-attribute\n   *\n   * @returns {string} responseText attribute\n   */\n  get responseText() {\n    if (this.responseType !== '' && this.responseType !== 'text') {\n      throwError('InvalidStateError');\n    }\n    if (this._readyState !== MockXhr.LOADING && this._readyState !== MockXhr.DONE) {\n      return '';\n    }\n\n    // No support for charset decoding as outlined in https://xhr.spec.whatwg.org/#text-response\n    return this._response.body === null ? '' : this._response.body;\n  }\n\n  /**\n   * noop setter\n   *\n   * @param {*} value ignored value\n   * @returns {*} value\n   */\n  set responseText(value) { return value; }\n\n  /**\n   * https://xhr.spec.whatwg.org/#dom-xmlhttprequest-responsexml\n   *\n   * @returns {*} responseXML attribute\n   */\n  get responseXML() {\n    if (this.responseType !== '' && this.responseType !== 'document') {\n      throwError('InvalidStateError');\n    }\n    if (this._readyState !== MockXhr.DONE) {\n      return null;\n    }\n\n    // Since this library is meant to run on node, there is no support for charset decoding as\n    // outlined in https://xhr.spec.whatwg.org/#text-response\n    // If needed, a document response can be given to setResponseBody() to be returned here.\n    return this._response.body === null ? '' : this._response.body;\n  }\n\n  /**\n   * noop setter\n   *\n   * @param {*} value ignored value\n   * @returns {*} value\n   */\n  set responseXML(value) { return value; }\n\n  ///////////////////////////\n  // Mock response methods //\n  ///////////////////////////\n\n  /**\n   * Fire a request upload progress event.\n   *\n   * @param {number} transmitted bytes transmitted\n   */\n  uploadProgress(transmitted) {\n    if (!this._sendFlag || this._uploadCompleteFlag) {\n      throw new Error('Mock usage error detected.');\n    }\n    if (this._uploadListenerFlag) {\n      // If no listeners were registered before send(), no upload events should be fired.\n      this._fireUploadEvent('progress', transmitted, this._getRequestBodySize());\n    }\n  }\n\n  /**\n   * Complete response method. Sets the response headers and body. Will set the\n   * state to DONE.\n   *\n   * @param {number} status response http status (default 200)\n   * @param {?object} headers name-value headers (optional)\n   * @param {?*} body response body (default null)\n   * @param {?string} statusText response http status text (optional)\n   */\n  respond(status, headers, body, statusText) {\n    this.setResponseHeaders(status, headers, statusText);\n    this.setResponseBody(body);\n  }\n\n  /**\n   * Set only the response headers. Will change the state to HEADERS_RECEIVED.\n   *\n   * @param {number} status response http status (default 200)\n   * @param {?object} headers name-value headers (optional)\n   * @param {?string} statusText response http status text (optional)\n   */\n  setResponseHeaders(status, headers, statusText) {\n    if (this._readyState !== MockXhr.OPENED || !this._sendFlag) {\n      throw new Error('Mock usage error detected.');\n    }\n    if (this.body) {\n      this._requestEndOfBody();\n    }\n    status = typeof status === 'number' ? status : 200;\n    const statusMessage = statusText !== undefined ? statusText : getStatusText(status);\n    this._processResponse({\n      status,\n      statusMessage,\n      headers: new HeadersContainer(headers),\n    });\n  }\n\n  /**\n   * Fire a response progress event. Will set the state to LOADING.\n   *\n   * @param {number} transmitted transmitted bytes\n   * @param {number} length total bytes\n   */\n  downloadProgress(transmitted, length) {\n    if (this._readyState !== MockXhr.HEADERS_RECEIVED\n      && this._readyState !== MockXhr.LOADING) {\n      throw new Error('Mock usage error detected.');\n    }\n\n    // Useless condition but follows the spec's wording\n    if (this._readyState === MockXhr.HEADERS_RECEIVED) {\n      this._readyState = MockXhr.LOADING;\n    }\n\n    // As stated in https://xhr.spec.whatwg.org/#the-send()-method\n    // Web compatibility is the reason readystatechange fires more often than\n    // state changes.\n    this._fireReadyStateChange();\n    this._fireEvent('progress', transmitted, length);\n  }\n\n  /**\n   * Set the response body. Will set the state to DONE.\n   *\n   * @param {?*} body response body (default null)\n   */\n  setResponseBody(body = null) {\n    if (!this._sendFlag\n      || (this._readyState !== MockXhr.OPENED\n        && this._readyState !== MockXhr.HEADERS_RECEIVED\n        && this._readyState !== MockXhr.LOADING)) {\n      throw new Error('Mock usage error detected.');\n    }\n    if (this._readyState === MockXhr.OPENED) {\n      // Default \"200 - OK\" response headers\n      this.setResponseHeaders();\n    }\n\n    // As stated in https://xhr.spec.whatwg.org/#the-send()-method\n    // Web compatibility is the reason readystatechange fires more often than\n    // state changes.\n    this._readyState = MockXhr.LOADING;\n    this._fireReadyStateChange();\n\n    this._response.body = body !== undefined ? body : null;\n    this._handleResponseEndOfBody();\n  }\n\n  /**\n   * Simulate a network error. Will set the state to DONE.\n   */\n  setNetworkError() {\n    if (!this._sendFlag) {\n      throw new Error('Mock usage error detected.');\n    }\n    this._processResponse(this._networkErrorResponse());\n  }\n\n  /**\n   * Simulate a request timeout. Will set the state to DONE.\n   */\n  setRequestTimeout() {\n    if (!this._sendFlag) {\n      throw new Error('Mock usage error detected.');\n    }\n    this._terminateRequest();\n    this._timedOutFlag = true;\n    this._processResponse(this._networkErrorResponse());\n  }\n\n  ///////////////////////////////////\n  // Request and response handling //\n  ///////////////////////////////////\n\n  /**\n   * Note: the \"process request body\" task is in the MockXhr response methods\n   * Process request end-of-body task. When the whole request is sent.\n   * https://xhr.spec.whatwg.org/#the-send()-method\n   */\n  _requestEndOfBody() {\n    this._uploadCompleteFlag = true;\n\n    if (this._uploadListenerFlag) {\n      // If no listeners were registered before send(), these steps do not run.\n      const length = this._getRequestBodySize();\n      const transmitted = length;\n      this._fireUploadEvent('progress', transmitted, length);\n      this._fireUploadEvent('load', transmitted, length);\n      this._fireUploadEvent('loadend', transmitted, length);\n    }\n  }\n\n  /**\n   * Process response task. When the response headers are received.\n   * https://xhr.spec.whatwg.org/#the-send()-method\n   *\n   * @param {*} response response\n   */\n  _processResponse(response) {\n    this._response = response;\n    this._handleResponseErrors();\n    if (this._isNetworkErrorResponse()) {\n      return;\n    }\n    this._readyState = MockXhr.HEADERS_RECEIVED;\n    this._fireReadyStateChange();\n    if (this._readyState !== MockXhr.HEADERS_RECEIVED) {\n      return;\n    }\n    if (this._response.body === null) {\n      this._handleResponseEndOfBody();\n    }\n    // Further steps are triggered by the MockXhr response methods\n  }\n\n  /**\n   * Handle response end-of-body for response.\n   * https://xhr.spec.whatwg.org/#handle-response-end-of-body\n   */\n  _handleResponseEndOfBody() {\n    this._handleResponseErrors();\n    if (this._isNetworkErrorResponse()) {\n      return;\n    }\n    const length = this._response.body ? this._response.body.length : 0;\n    this._fireEvent('progress', length, length);\n    this._readyState = MockXhr.DONE;\n    this._sendFlag = false;\n    this._fireReadyStateChange();\n    this._fireEvent('load', length, length);\n    this._fireEvent('loadend', length, length);\n  }\n\n  /**\n   * Handle errors for response.\n   * https://xhr.spec.whatwg.org/#handle-errors\n   */\n  _handleResponseErrors() {\n    if (!this._sendFlag) {\n      return;\n    }\n    if (this._timedOutFlag) {\n      // Timeout\n      this._requestErrorSteps('timeout');\n    } else if (this._isNetworkErrorResponse()) {\n      // Network error\n      this._requestErrorSteps('error');\n    }\n  }\n\n  /**\n   * The request error steps for event 'event'.\n   * https://xhr.spec.whatwg.org/#request-error-steps\n   *\n   * @param {string} event event name\n   */\n  _requestErrorSteps(event) {\n    this._readyState = MockXhr.DONE;\n    this._sendFlag = false;\n    this._response = this._networkErrorResponse();\n    this._fireReadyStateChange();\n    if (!this._uploadCompleteFlag) {\n      this._uploadCompleteFlag = true;\n\n      if (this._uploadListenerFlag) {\n        // If no listeners were registered before send(), no upload events should be fired.\n        this._fireUploadEvent(event, 0, 0);\n        this._fireUploadEvent('loadend', 0, 0);\n      }\n    }\n    this._fireEvent(event, 0, 0);\n    this._fireEvent('loadend', 0, 0);\n  }\n\n  ///////////////\n  // Internals //\n  ///////////////\n\n  /**\n   * @returns {object} new network error response object\n   */\n  _networkErrorResponse() {\n    return {\n      type: 'error',\n      status: 0,\n      statusMessage: '',\n      headers: new HeadersContainer(),\n      body: null,\n    };\n  }\n\n  _isNetworkErrorResponse() {\n    return this._response.type === 'error';\n  }\n\n  _terminateRequest() {\n    delete this.method;\n    delete this.url;\n  }\n\n  _getRequestBodySize() {\n    if (!this.body) {\n      return 0;\n    }\n    return this.body.size ? this.body.size : this.body.length;\n  }\n\n  _newEvent(name, transmitted, length) {\n    return new Event(name, transmitted, length);\n  }\n\n  _fireEvent(name, transmitted, length) {\n    this.dispatchEvent(this._newEvent(name, transmitted, length));\n  }\n\n  _fireUploadEvent(name, transmitted, length) {\n    this._upload.dispatchEvent(this._newEvent(name, transmitted, length));\n  }\n\n  _fireReadyStateChange() {\n    const event = new Event('readystatechange');\n    if (this.onreadystatechange) {\n      this.onreadystatechange(event);\n    }\n    this.dispatchEvent(event);\n  }\n\n  _scheduleRequestTimeout() {\n    // Cancel any previous timeout task\n    if (this._timeoutTask) {\n      clearTimeout(this._timeoutTask);\n    }\n\n    if (this._timeout > 0) {\n      // The timeout delay must be measured relative to the start of fetching\n      // https://xhr.spec.whatwg.org/#the-timeout-attribute\n      const delay = Math.max(0, this._timeout - (Date.now() - this._timeoutReference));\n      this._timeoutTask = setTimeout(() => {\n        if (this._sendFlag) {\n          this.setRequestTimeout();\n        }\n        delete this._timeoutTask;\n      }, delay);\n    }\n  }\n}\n\n// Global flag to enable the effects of the timeout attribute\nMockXhr.timeoutEnabled = true;\n\n/**\n * The client states\n * https://xhr.spec.whatwg.org/#states\n */\nMockXhr.UNSENT = 0;\nMockXhr.OPENED = 1;\nMockXhr.HEADERS_RECEIVED = 2;\nMockXhr.LOADING = 3;\nMockXhr.DONE = 4;\n","import { normalizeHTTPMethodName } from './Utils';\n\n/**\n * Mock server for responding to XMLHttpRequest mocks from the class MockXhr. Provides simple route\n * matching and request handlers to make test harness creation easier.\n */\nexport default class MockXhrServer {\n  /**\n   * Constructor\n   *\n   * @param {MockXhr} xhrMock XMLHttpRequest mock class\n   * @param {?object} routes routes\n   */\n  constructor(xhrMock, routes = {}) {\n    this.MockXhr = xhrMock;\n    this._requests = [];\n    this._routes = {};\n    Object.keys(routes).forEach((method) => {\n      const [matcher, handler] = routes[method];\n      this.addHandler(method, matcher, handler);\n    });\n    xhrMock.onSend = (xhr) => { this._handleRequest(xhr); };\n\n    // Setup a mock request factory for users\n    this.xhrMock = xhrMock; // For backwards compatibility with < 4.1.0\n    this.xhrFactory = () => new this.MockXhr();\n  }\n\n  /**\n   * Install the server's XMLHttpRequest mock in the context. Revert with remove().\n   *\n   * @param {object} context context object (e.g. global, window)\n   * @returns {MockXhrServer} this\n   */\n  install(context = global) {\n    this._savedXMLHttpRequest = context.XMLHttpRequest;\n    this._savedContext = context;\n    context.XMLHttpRequest = this.MockXhr;\n    return this;\n  }\n\n  /**\n   * Remove the server as the global XMLHttpRequest mock. Reverts the actions of install(global).\n   */\n  remove() {\n    if (!this._savedContext) {\n      throw new Error('remove() called without matching install(global).');\n    }\n\n    if (this._savedXMLHttpRequest !== undefined) {\n      this._savedContext.XMLHttpRequest = this._savedXMLHttpRequest;\n      delete this._savedXMLHttpRequest;\n    } else {\n      delete this._savedContext.XMLHttpRequest;\n    }\n    delete this._savedContext;\n  }\n\n  /**\n   * Disable the effects of the timeout attribute on the XMLHttpRequest mock used by the server.\n   */\n  disableTimeout() {\n    this.MockXhr.timeoutEnabled = false;\n  }\n\n  /**\n   * Enable the effects of the timeout attribute on the XMLHttpRequest mock used by the server.\n   */\n  enableTimeout() {\n    this.MockXhr.timeoutEnabled = true;\n  }\n\n  /**\n   * Add a GET request handler.\n   *\n   * @param {string|RegExp|Function} matcher url matcher\n   * @param {object|Function|object[]|Function[]} handler request handler\n   * @returns {MockXhrServer} this\n   */\n  get(matcher, handler) {\n    return this.addHandler('GET', matcher, handler);\n  }\n\n  /**\n   * Add a POST request handler.\n   *\n   * @param {string|RegExp|Function} matcher url matcher\n   * @param {object|Function|object[]|Function[]} handler request handler\n   * @returns {MockXhrServer} this\n   */\n  post(matcher, handler) {\n    return this.addHandler('POST', matcher, handler);\n  }\n\n  /**\n   * Add a PUT request handler.\n   *\n   * @param {string|RegExp|Function} matcher url matcher\n   * @param {object|Function|object[]|Function[]} handler request handler\n   * @returns {MockXhrServer} this\n   */\n  put(matcher, handler) {\n    return this.addHandler('PUT', matcher, handler);\n  }\n\n  /**\n   * Add a DELETE request handler.\n   *\n   * @param {string|RegExp|Function} matcher url matcher\n   * @param {object|Function|object[]|Function[]} handler request handler\n   * @returns {MockXhrServer} this\n   */\n  delete(matcher, handler) {\n    return this.addHandler('DELETE', matcher, handler);\n  }\n\n  /**\n   * Add a request handler.\n   *\n   * @param {string} method HTTP method\n   * @param {string|RegExp|Function} matcher url matcher\n   * @param {object|Function|object[]|Function[]} handler request handler\n   * @returns {MockXhrServer} this\n   */\n  addHandler(method, matcher, handler) {\n    // Match the processing done in MockXHR for the method name\n    method = normalizeHTTPMethodName(method);\n\n    if (!this._routes[method]) {\n      this._routes[method] = [];\n    }\n    this._routes[method].push({\n      matcher,\n      handler,\n      count: 0,\n    });\n    return this;\n  }\n\n  /**\n   * Set the default request handler for requests that don't match any route.\n   *\n   * @param {object|Function|object[]|Function[]} handler request handler\n   * @returns {MockXhrServer} this\n   */\n  setDefaultHandler(handler) {\n    this._defaultRoute = {\n      handler,\n      count: 0,\n    };\n    return this;\n  }\n\n  /**\n   * Return 404 responses for requests that don't match any route.\n   *\n   * @returns {MockXhrServer} this\n   */\n  setDefault404() {\n    return this.setDefaultHandler({ status: 404 });\n  }\n\n  /**\n   * @returns {object[]} list of requests received by the server. Entries: { method, url }\n   */\n  getRequestLog() {\n    return this._requests;\n  }\n\n  _handleRequest(xhr) {\n    // Record the request for easier debugging\n    this._requests.push({\n      method: xhr.method,\n      url: xhr.url,\n      headers: xhr.requestHeaders.getHash(),\n      body: xhr.body,\n    });\n\n    const route = this._findFirstMatchingRoute(xhr) || this._defaultRoute;\n    if (route) {\n      // Routes can have arrays of handlers. Each one is used once and the last one is used if out\n      // of elements.\n      let { handler } = route;\n      if (Array.isArray(handler)) {\n        handler = handler[Math.min(handler.length - 1, route.count)];\n      }\n      route.count += 1;\n\n      if (typeof handler === 'function') {\n        handler(xhr);\n      } else {\n        xhr.respond(handler.status, handler.headers, handler.body, handler.statusText);\n      }\n    }\n  }\n\n  _findFirstMatchingRoute(xhr) {\n    const method = normalizeHTTPMethodName(xhr.method);\n    if (!this._routes[method]) {\n      return undefined;\n    }\n\n    const { url } = xhr;\n    return this._routes[method].find((route) => {\n      const { matcher } = route;\n      if (typeof matcher === 'function') {\n        return matcher(url);\n      } else if (matcher instanceof RegExp) {\n        return matcher.test(url);\n      }\n      return matcher === url;\n    });\n  }\n}\n","import MockXhr from './MockXhr';\nimport MockXhrServer from './MockXhrServer';\n\n/**\n * Create a new \"local\" MockXhr subclass. This makes it easier to have self-contained unit tests\n * since \"global\" hooks can be registered directly on the subclass. These hooks don't need to then\n * be removed after tests because they are local to the new subclass.\n *\n * @returns {MockXhr} new MockXhr subclass\n */\nexport function newMockXhr() {\n  class LocalMockXhr extends MockXhr {\n    constructor() {\n      super();\n\n      // Call the local onCreate hook on the new mock instance\n      if (typeof LocalMockXhr.onCreate === 'function') {\n        LocalMockXhr.onCreate(this);\n      }\n    }\n\n    // Override the parent method to enable the local MockXhr instance's\n    // onSend() hook\n    send(...args) {\n      super.send(...args);\n\n      // Execute in an empty callstack\n      if (typeof LocalMockXhr.onSend === 'function') {\n        // Save the callback in case it changes before it has a chance to run\n        const { onSend } = LocalMockXhr;\n        setTimeout(() => onSend.call(this, this), 0);\n      }\n    }\n  }\n\n  // Override the parent class' flag to enable the effects of the timeout attribute\n  LocalMockXhr.timeoutEnabled = true;\n  return LocalMockXhr;\n}\n\n/**\n * Create a new mock server using MockXhr.\n *\n * @returns {MockXhrServer} new mock server\n */\nexport function newServer(routes) {\n  return new MockXhrServer(newMockXhr(), routes);\n}\n"],"names":["this","const","super","let","onSend"],"mappings":"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"}